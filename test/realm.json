{
  "id": "ezaeza",
  "realm": "ezaeza",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "8fded859-130a-40dc-8d65-392c663d9dad",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "ezaeza",
        "attributes": {}
      },
      {
        "id": "f3ba05b5-ec23-46a3-bcad-11d31bb2299e",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "ezaeza",
        "attributes": {}
      },
      {
        "id": "35b605bd-e07b-43c6-98d0-65e332d2b07a",
        "name": "default-roles-ezaeza",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "ezaeza",
        "attributes": {}
      },
      {
        "id": "dbeab419-013e-473f-a71a-1e35ae20c9ad",
        "name": "zaezaezae",
        "description": "azezae",
        "composite": false,
        "clientRole": false,
        "containerId": "ezaeza",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "d6c7693c-2a7c-4fae-902a-594f7f8e9e8c",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "0c4e8126-affa-43b3-8b98-d7e436f3d23d",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "99cafcbe-2100-43be-b91f-83626d0d6310",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "152a62fb-c27e-479a-8adf-ff8fe22aeb6f",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "f0d90fce-107a-4a23-9869-8454c1001227",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "f6da9893-2c20-46d1-bc6a-0e977a542f0d",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "32c133cc-31d2-483f-86f0-d1ab873a8bc2",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "f0fa9e5f-d330-458b-a98a-76ff158c4a24",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "4fd38b01-7a8d-4e67-ba55-37f14ba10bba",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "799fa127-c26c-4c45-a777-a6ec840a0f61",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "93b0c701-3b61-4c1d-b7d3-5fbcfdbcb985",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "5c2ea8f5-7a9e-467b-93e9-2f03835bd3c8",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "24792ad2-62c5-41de-a3fd-bd235345fb57",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "d182e1f0-d249-4f36-bfce-d2f0e2731d18",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "c005fb2f-53f1-4c03-b814-12255482ec7e",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-users",
                "manage-realm",
                "view-realm",
                "manage-events",
                "create-client",
                "manage-identity-providers",
                "impersonation",
                "view-authorization",
                "view-clients",
                "manage-authorization",
                "query-realms",
                "query-users",
                "query-clients",
                "query-groups",
                "manage-clients",
                "view-users",
                "view-identity-providers",
                "view-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "14eb0f74-f953-4e4c-aa69-e401ab57846a",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "f4c58894-2050-462d-a42f-12152befc0ee",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "c3f9073c-221c-4a09-8f5a-d06266dc2eb1",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        },
        {
          "id": "1222f8ee-76c7-4187-b0f7-07cbe4b5f50c",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
          "attributes": {}
        }
      ],
      "azezaezae": [],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "a1524204-e943-44ca-b713-058c47a2af09",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "2179ed43-12fb-471a-b9fc-3a32cf36adbf",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "a5228cb7-7a0c-4a49-8f0a-21d828fbdd66",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "145752b5-4e02-42f3-9878-293e0b57dc9f",
          "attributes": {}
        },
        {
          "id": "2605afe1-58ac-47ef-9acd-df676ed71597",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "145752b5-4e02-42f3-9878-293e0b57dc9f",
          "attributes": {}
        },
        {
          "id": "c0bc5cad-3a3d-4cd0-9e02-48a79fdb61bf",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "145752b5-4e02-42f3-9878-293e0b57dc9f",
          "attributes": {}
        },
        {
          "id": "73778255-8fbd-4c14-bcf8-d5879ec34397",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "145752b5-4e02-42f3-9878-293e0b57dc9f",
          "attributes": {}
        },
        {
          "id": "2284f3a0-a897-4188-9990-8f88d45fc94b",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "145752b5-4e02-42f3-9878-293e0b57dc9f",
          "attributes": {}
        },
        {
          "id": "b63a52ac-8757-4f38-a144-937b6ee7e757",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "145752b5-4e02-42f3-9878-293e0b57dc9f",
          "attributes": {}
        },
        {
          "id": "b8bc482d-a8d1-4268-9747-6d7c5abd6b28",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "145752b5-4e02-42f3-9878-293e0b57dc9f",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "35b605bd-e07b-43c6-98d0-65e332d2b07a",
    "name": "default-roles-ezaeza",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "ezaeza"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "ee9e742e-7dff-471a-bbc1-79d4b4fb500c",
      "createdTimestamp": 1643931582270,
      "username": "qsdqsdsqd",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "credentials": [
        {
          "id": "38be148a-4d02-4def-8e10-6c9d9b614129",
          "type": "password",
          "createdDate": 1643931599497,
          "secretData": "{\"value\":\"1VQCrGsRfbY765XEZcMEw0MSAQA3IZdC+T8oIDUJwKCsRxI8JHZaGRmd5hIDgnnfMbDZpfmyqM0nDS5Fers5cg==\",\"salt\":\"lBAeUXTY3Oe3V0cxFSbu1w==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [
        "UPDATE_PASSWORD",
        "VERIFY_EMAIL"
      ],
      "realmRoles": [
        "default-roles-ezaeza"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "145752b5-4e02-42f3-9878-293e0b57dc9f",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/ezaeza/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/ezaeza/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "dd284af2-8486-4450-843f-331d62c8ee62",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/ezaeza/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/ezaeza/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "36b9a5cd-c675-4008-97ba-9742ce2f0266",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "698e7d36-2920-4ec3-bae2-93cd4daf00b2",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "991ae31e-cecc-4adb-a8b6-0760b0d1d97e",
      "clientId": "azezaezae",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "backchannel.logout.session.required": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2179ed43-12fb-471a-b9fc-3a32cf36adbf",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "29049c05-3a0a-4d7b-a8ff-aceca1bd8ae1",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "04635a71-c57e-4b9b-9066-f525b5dd73c4",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/ezaeza/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/ezaeza/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "f5e9006a-c669-49a0-b9ae-116a161fab45",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "1a870692-b89f-4275-b154-dc3850092d09",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "f7f4a40d-cdfd-4724-8948-d596b872f0be",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "6709523f-9b9d-4be8-9007-e1635b595fe9",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "7798312d-eb66-410b-baac-7ec7f4672a03",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "25eb8394-798b-4460-a571-264030eb0dd9",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "e70edd4e-ccbf-4a10-887b-defb594409c5",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5674bc17-b683-455c-988f-b8fc1be26b7c",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "24bed4c9-cb83-47d6-85d2-a2471a085f22",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "70a06309-ed68-4ae5-a2c1-4e81a3478c9b",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "ca34f4c1-315d-4fd7-9ab7-ee1331e440e7",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dbc3a091-9db4-42cf-b741-a71f4b8bc2b1",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1a25fa58-f1dd-43ff-9aa6-0dff264bacea",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "079a853e-eb8f-45e2-8914-aa147bc3b178",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b971c65b-38f5-43a7-a1b2-0c94394ddb4c",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3b1a65ff-05a4-426f-a8ae-e4184461239b",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "3c51d6fd-4bec-41a1-824e-ff1723c27360",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "876356c2-06c1-445e-bb91-859c8cdcdeae",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "044c7263-6fa1-433f-b936-58c1be92fc92",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4edbe2fd-b794-400b-8ae8-f0d380fae3b2",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2938aaf6-29c3-4283-abdd-9a26d88b6f60",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3b6bc62b-c5bc-405e-99f0-61e43e576d17",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1c7ce564-2307-4d19-a6ba-3b6ea74db3c1",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9cf3ac68-15d1-4c57-9303-105e2970c63c",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "17acebce-a44b-4da1-8dfc-06bf231da51d",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "9f023918-98f4-4c86-9710-908e8a4391da",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "13778640-b3c0-42ca-958c-dc1d1b9c032d",
      "name": "ezaezaezae",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "43345277-edad-4025-a03e-b93b7ad114b2",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "3571182b-6bdb-4d45-a36c-4b907189a857",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "030242df-9075-4584-8c31-e9ebcaecb447",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "b5235199-2424-4e8e-aef8-29eac9196f1c",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "01580a43-e39b-43e1-b8d5-94f43cd2319e",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "6318269b-a85c-42c6-97f7-91558d393509",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "e62d3439-9cb2-4bed-bb52-49cee5c57c54",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "199cd7d9-4f0b-43d3-9e19-40c98c6b47b8",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "5a1dc5d1-d217-46bb-bc05-a1a75ac585a8",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "28a7291a-6883-46e8-95f4-8f998aefb3cf",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "web-origins",
    "role_list",
    "profile",
    "roles",
    "email"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "microprofile-jwt",
    "phone"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "a035c3d9-faeb-46ef-8d0a-d3a0dd2b5a73",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "e1c26c2e-1d62-4fb6-8894-15949ad72164",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "b04d3ece-5a46-47d5-bbcb-e8541ac99a49",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "f0e450d2-69f8-4ac1-8394-5c0dcc417f0b",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "8a909d3a-4032-43ae-8ea0-2cd8fc93a698",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "b35ed7e6-524e-42e0-9d21-6697ee38194f",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "755ead7d-7567-4bb7-a8b1-e40ff185007a",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "e1b3297a-0db2-4eb2-a52c-d2ed07ef9773",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "3570c3af-32d0-4208-a531-c68e88d7ccfc",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "b2f7d809-5933-4264-b62f-8ced2414889b"
          ],
          "secret": [
            "S-dNitFLI8vkKvs37ipruvjMEQfhnuJ_XSQgItQZCQIM8XLSIKGogVHrHCwOdF0Z46cvSqJJLUwxB09nxx1NeA"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "397d3d86-d38d-4a3a-b336-3240dd803f95",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAkTPEPN/MV8quefWkEkNje8mZkex++iuQUKnSVc+EWxGxuE7eJROEj4l3iCYtef+jHTPWIYVhj5GH7CU74ZtSiz6bBrYvEaqKvZd1ijVVsCWMEUj64d6f3eBAnClqkpPhPTg3Yo6/2S/4hbQA9XtcSMJWJU0+4xgKcN9uMoafShDn3ap2/c5ANQJR8wegs3m0KyT1uOrBsOL1JMRidMHMz8natYK1IpRIOReTSUImwMj2Mg5waWBsBFxPXwC5+iD9DPBxFOkGlvT3/W27UgTKWmV0ZV6IFPgo3Y3khkDiCbpqpipSFtHdmrujKXaU0SD1HrY4YE7gTK9fPAds16n1HwIDAQABAoIBAAEM2Mx/6eBwrNZg+nDPX/bTPHMbvMdebUrID6djOtfVxu1IVL775yeKnPy1GfsZ6Dob196iMlRxfwQsOMSm9O/g4gooYyrDiwFYCReYzyfY/axaVMYxcAKQzqbSfdzViPmCYJQr6CNP/4IoDSG5ZK96CFl4t4247MpoM0nWQ2yrs8uc8Fxz62CpWS8JaVC0OzXuJ281KGVVVMl4mmmeit01Lm2FzyHxMT32o7iD7T4fnZHbVsFfFGyWhbS05pRhOxt4qwd8auneFTWqZ8olH37QmQDDiqATwk9qhfiZrUGHEzFZ49TlvB7eVkpSqpg5BIuwOW1V/C7RpZ7eeXavjbECgYEA55o80AYg56X2qoHZy5ObDhLclBblvVlkZAY1O1+n2a4mETmaVEl1+teiHyBb7zma6WjV7tlbLM8Ri9D+74hmv4SptnnDCsU5IR2FnNlSwj/VXS9v1kRGNxCadfAud9Sl9GJwfJ8ZLARX082qgY+n8fFC/ztjpDqLfFcThOXhL40CgYEAoH+FbgwMfg0If0SSGRzfxmmjdWuw+lrh4J5ZNQEkfYcmry4B8s4kJMpMk/Drv5oo0JThwxG6017oT1AcGa9mQ6JSVyW1binE+qfyIn6u/EFmD/6MuqmZ+LojSlVztSst/zdCYGJaK1IXkoM/KGEBx2MK7LCUADoyxXN709/zxlsCgYA0firmY10149Hil4fLsmrkZ7YDAqWTox0z5oxOJsIefnA2Wz31eKj678DZGTZ9JCtOV+qVNkKKB2zMqdP+aoYPRnxI1ZQ1broiHVTZVhCB4oHzmvrYL6VSebronEWL93Cd0Wn5dP35kgpuASFyOCMynSI4Qze0U2imB/5uksPVSQKBgAEaHw5sYsGS0VYeYGpvulGgdBDgVmzBpv9l1vL4OQnrnaZiSH0kUTc3dGMnqla8dj9IZmxyeLfu1OWGhUrf23HncW1Lwv0oqEOYV59JA2aUBGFjvA+kDnyYuplOEOdTjpNMC9ahlkDp5WOKJyrdz6dQ1MhfRgTiYWrdqiIATao1AoGBAMp1kMM/CK6/UaiFDGLLXUZieopEOIek9esrysYaG/FcsynEWuyT6V4j+vPQ+vnVr1eaLuLkGhiHDnbnj46LBmhDQ/bZZsrfSZyAvkZy4QOjaVmrD+4oaJyzfuu73LWZYJCfH5ke9QwUfUwqlWL1H2i38zyCJhN8GN5NSupHZuR9"
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICmzCCAYMCBgF+weTaAzANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZlemFlemEwHhcNMjIwMjAzMjMyMDA3WhcNMzIwMjAzMjMyMTQ3WjARMQ8wDQYDVQQDDAZlemFlemEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCRM8Q838xXyq559aQSQ2N7yZmR7H76K5BQqdJVz4RbEbG4Tt4lE4SPiXeIJi15/6MdM9YhhWGPkYfsJTvhm1KLPpsGti8Rqoq9l3WKNVWwJYwRSPrh3p/d4ECcKWqSk+E9ODdijr/ZL/iFtAD1e1xIwlYlTT7jGApw324yhp9KEOfdqnb9zkA1AlHzB6CzebQrJPW46sGw4vUkxGJ0wczPydq1grUilEg5F5NJQibAyPYyDnBpYGwEXE9fALn6IP0M8HEU6QaW9Pf9bbtSBMpaZXRlXogU+CjdjeSGQOIJumqmKlIW0d2au6MpdpTRIPUetjhgTuBMr188B2zXqfUfAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIiOIpg7ZK4hxF5oydPqxbmmsVboBQPW0Qd4inDF/ZooP8/Dc+tkr1agsPle4N/kTE925DeTRmPCn4u27PnwNhoe6sChJoNe53Zwwno+9r2ay9++8xDbSrRo2mdEWikSM7YxMzj02I+y4YH7NFZJPhxT2LMViaLOXHgB0w9ToUcegepFrPzGviI+IkdiEiW5wEOwZNOwa2nDcn8elWvsT3Oz1rIy0QajgOtD8Udpo7SMBsPaK8h2HhGSKEx2ByqyZNjB/Ryug4k9RIp11rzOd/lWExK42gyCZOriFS96PDoAAQ3tj6fz1QPkOsxWM1hUHx2HEnWjFDU28HAzP50jbZg="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "a16820ec-5665-4c16-aa85-3d341b941944",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAwNITs38RMHvavzQoGtTPuxgOROgvsIMh5ycnJwWsyJZ/+4P4lE4AS+vXT41t18yCubH5ZKfT9AiS1zauJmJGn+RnHmDODhQMazvs/XCP+KsAvKVfNqeYk17MdULl15Ua8Fimb6+WpFS/QP8jwgfBEhULQ0c4E6XcVsaahNnY7haPzmU6PWI1IMFLMZ2qmT+xhefiNLju8jiN1HdWFnBldKyPlynP0lb1/s/1Y7rqrPvX/zbYTgDstEcias7aiklBF6189DfNhY0RVCcwnqXIUfv8CtXsKHChf79rVqOiISibLWOY+gci/J9ZjxzCbtzDUm2iQqa/1z2gOrVvcaBLZQIDAQABAoIBAALsrMPSL46OslioD9uoUqZBzSWaZ+7DbmY1H9DlsyMvtS05aTHGpRaBszhPqtTVEz6BxoiSSxKudpuxBp8qamvOaQn66eUoxK9zrzqA1I4u+cnisDkB/bxueadlplrItinjDlMvVJeVeXkg5Yfx2inOC+evUthpcZgXVwygyTuDMVSDnLcBDWPMVe4YnlqKEG29SEmvdT17NZTw0UMuOReWU0hC8xFxuFp1g4p7sj6in+Gs23HsxuwapdUM/xSmfYkAYm6EbufT/lmGaNxnVKT+jfr2+ipZXB5VXc+YJK5DVpOYp1aqBTNfGaxplK4o+BHH3YZA4EX1cgg0633BmJkCgYEA8FfRReosDk1duuD1RqKo5PUa3DpTdgc+M0VbWipqaNJlJfmRDYMpkKWZeMw/lzeFim1vzJdJZ640kE8AqOPoQOlBPnLs11X2Tx+HCnejcpOGziSYE0zaU77ulxio53+vvWvB8YUQAMHNi0sDcS6Sh4cqxPpmgsT1mo+k0MxIqYsCgYEAzWG7TMML0BJM+ECMdbF1lYBkc/VPmaRLdtmx0rcaAVGPTSJuLdyfzFIJKKH64YnXhaMZr9OBN4iATSoDusFGKxCRegX2oqyGOtxZe3KtlxOnaDp4Rr7dRAui8uZtAh+qGUQlyqijuU7UoIxnVGiOrndRd0ODEI8BdQRyDLN8HM8CgYEAtP7NQMOLDfJBZdzHmbwhSNs0sSjTdY0a0G2o0AwlOm9HcQOysuRVxvKO0yOtt+k+DfNAQGimBQhx2UNFkeqgG1INqkPODJRV+1wYzE8wrbZfzJpOVCqKOIsPDoapnDzSUen2kjXMyWUpr358Rx31h07JbLHNxSkidJU8X2mYRuUCgYEAnu6hPX62Nnbi/z0cNLt17ZIkqiNMTO35w+gklpZA1oJh7WPWdUEEm91j3wCyHzRHBtA3QXvfw7Sq7Iu1xSBph0vT9+SDflEZspTv3frZYE7CPoL4rm5m1ZBXsbYk5v7P56t3v0MPJ4hcPD1KfORIfbQx46Pn2bmAfChLhY6jXbsCgYAXMlh/uC03SfabBQKl6lqIP46HoVnkvrxwkzEeFa4oPWt9W4TAdmi9769R4riE9lhjTIP7hmgdikq1vi9dMiVKpKoJmHrZDFyiwqFtH2Kn4vN75km8+W7Go3HHezXF1X6+mfOkl8w1nDAQSeoHToc6F2vEIpNKZck939yBYOKMQg=="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICmzCCAYMCBgF+weTZ1zANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZlemFlemEwHhcNMjIwMjAzMjMyMDA3WhcNMzIwMjAzMjMyMTQ3WjARMQ8wDQYDVQQDDAZlemFlemEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDA0hOzfxEwe9q/NCga1M+7GA5E6C+wgyHnJycnBazIln/7g/iUTgBL69dPjW3XzIK5sflkp9P0CJLXNq4mYkaf5GceYM4OFAxrO+z9cI/4qwC8pV82p5iTXsx1QuXXlRrwWKZvr5akVL9A/yPCB8ESFQtDRzgTpdxWxpqE2djuFo/OZTo9YjUgwUsxnaqZP7GF5+I0uO7yOI3Ud1YWcGV0rI+XKc/SVvX+z/Vjuuqs+9f/NthOAOy0RyJqztqKSUEXrXz0N82FjRFUJzCepchR+/wK1ewocKF/v2tWo6IhKJstY5j6ByL8n1mPHMJu3MNSbaJCpr/XPaA6tW9xoEtlAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAAyjIjNtZHBRf5m4E0F6T+gS/xZPJph6lO2ortAauJ3h3/39eTRMb/9sT6JaNma9f3rY764I9eyfeD18iEXaDM4V6lhADLI5p2A4rPTZAMb93uTrTMgFoYRd4AmTvS45PQH1bL4BrRUmoTaZqq9WYsoB2B8lGNc2FmEx3WnbH3+DqeapJxVdTuL61b5OCrmt3JFsMihvN/197D13EYk5Jed9XNZc2B8tjMvbqxDVbXp1so3dEF6KEEl+tXNb2/xwaYsmvUrhuFQITSZMUqP1HKFHOzOSrfHXj2NDvT/XzTINm5POdtcfNfuZk/YZAPiIepFbGNv6KdLLyhkuW6dD67Y="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "6527c423-485b-4036-a239-cd08d424267d",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "ee1f699f-377c-4233-b691-77908da3d689"
          ],
          "secret": [
            "Z1CQTN5Rg-htpDvTnDf3YQ"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "20f8a8db-f54c-45ee-bb8c-2eff3f5e1a49",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "5fd0f25d-e23d-47e0-b014-3cb5d6c3b510",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "c9f285f9-9483-4a8b-8de8-232e6c4b7165",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "9571ebd5-9caa-44d2-81c3-543629dcddac",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "506c722b-cb39-471a-9c0f-e7b4c88f197b",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "945585ef-5ee5-4569-9d50-8d2b2538a39b",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "f32a7715-1186-42e6-995f-a093d4b3228d",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "baeb0ed7-1d47-4e17-938c-9f5677fa0eea",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "7381b4e8-e466-4c61-89bf-cb5b2393eb1e",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "4d6e88ec-5e5c-4715-a522-fbcaeaead66a",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "91155d16-6734-4c14-abed-118bd2db2955",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "abeb4ee4-5ce5-4810-ae0b-704481ce3786",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "9a5359cc-8ef4-44aa-9fd9-ad62499773b4",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "c9de1cff-e18c-48b9-ad04-1257f3af01d1",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "41abc3d5-9ce7-40fe-86c6-0e72d4cba9f2",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "452384a2-9d17-4e86-a4e6-c69f284c6249",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "81b28272-22d5-439e-b564-b5e164f3daa4",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "977c4336-c13d-40cc-b095-5c39f8dc2bc0",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "0cf57d0e-7e10-47b9-a1df-d6983b086921",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "4d290eab-222b-414d-b8a8-6230771fbd74",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "bdd94991-3dc0-40f6-bb25-dac6e138f7a9",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "81b11275-f000-44a2-80ea-8c4bff932270",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5"
  },
  "keycloakVersion": "16.1.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
